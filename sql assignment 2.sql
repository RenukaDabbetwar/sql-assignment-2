-- Q.1 Retrieve the total number of rentals made in the Sakila database.
use mavenmovies;
select count(*) from rental;

-- Q.2 Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(rental_duration) from film;

-- Q.3 Display the first name and last name of customers in uppercase.
select upper (first_name), upper(last_name) from customer;

-- Q.4 Extract the month from the rental date and display it alongside the rental ID.
select rental_id, month(rental_date) from rental;

-- Q.5 Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
SELECT 
    customer.customer_id, COUNT(rental_id)
FROM
    customer
        inner JOIN
    rental ON customer.customer_id = rental.customer_id
    GROUP BY customer.customer_id;
    use mavenmovies;
-- Q.6 Find the total revenue generated by each store.
select * from staff; -- store_id,staff_id
select * from store; -- store_id
select * from payment; -- payment_id,staff_id
SELECT 
    SUM(amount), store.store_id
FROM
    payment
        INNER JOIN
    staff ON payment.staff_id = staff.staff_id
        INNER JOIN
    store ON staff.store_id = store.store_id group by store.store_id;
    
    -- Q.7 Display the title of the movie, customer's first name, and last name who rented it.
    select * from film; -- film_id,title
    select * from inventory; -- inventory_id , film_id
    select * from rental; -- inventory_id, customer_id
    select * from customer; -- first_name, last_name
   SELECT 
    film.title, customer.first_name, customer.last_name
   FROM
    film
        INNER JOIN
    inventory ON film.film_id = inventory.film_id
        INNER JOIN
    rental ON rental.inventory_id = inventory.inventory_id
        INNER JOIN
    customer ON rental.customer_id = customer.customer_id;
    
    -- Q.8 Retrieve the names of all actors who have appeared in the film film_actor "Gone with the Wind."
    select * from film; -- film_id, title
    select * from film_actor; -- film_id,actor_id
    select * from actor; -- first_name, last_name
    SELECT 
    actor.first_name, actor.last_name
FROM
    film
        INNER JOIN
    film_actor ON film.film_id = film_actor.film_id
        INNER JOIN
    actor ON actor.actor_id = film_actor.actor_id where title like "Gone with the wind";
    
    -- Q.9 Determine the total number of rentals for each category of movies.
    select * from film; -- film_id
    select * from film_category; -- film_id,category_id
    select * from rental; -- rental_id, inventory_id
    select * from inventory; -- film_id
SELECT 
    COUNT(rental_id), film_category.category_id
FROM
    film
        inner JOIN
    film_category ON film.film_id = film_category.film_id
        INNER JOIN
    inventory ON film.film_id = inventory.film_id
        INNER JOIN
    rental ON rental.inventory_id = inventory.inventory_id
GROUP BY film_category.category_id;
    
  -- Q.10 Find the average rental rate of movies in each language.
  select * from film; -- language_id,rental_rate
  select * from language; -- language_id, name
  SELECT 
    AVG(rental_rate), language.name
FROM
    language
        INNER JOIN
    film ON film.language_id = language.language_id
GROUP BY language.name;

-- Q.11 Retrieve the customer names along with the total amount they've spent on rentals.
select * from customer; -- first_name, last_name
select * from payment; -- customer_id,rental_id,amount
select * from rental; -- customer_id 
    SELECT 
    customer.customer_id,customer.first_name, customer.last_name,SUM(amount)
FROM
    customer
        INNER JOIN
    payment ON payment.customer_id = customer.customer_id
        INNER JOIN
    rental ON payment.rental_id = rental.rental_id
GROUP BY customer.customer_id;
    
    -- Q.12 List the titles of movies rented by each customer in a particular city (e.g., 'London').
   
   select * from customer; -- address_id
   select * from address; -- city_id
   select * from city; -- city
   select * from inventory; 
   select * from film;
   select * from rental;
   SELECT 
    film.title, customer.customer_id, city
FROM
    film
        INNER JOIN
    inventory ON film.film_id = inventory.film_id
        INNER JOIN
    rental ON rental.inventory_id = inventory.inventory_id
        INNER JOIN
    customer ON rental.customer_id = customer.customer_id
        INNER JOIN
    address ON address.address_id = customer.address_id
        INNER JOIN
    city ON address.city_id = city.city_id
     where city = "london"
GROUP BY film.title, customer.customer_id;

-- Q.13 Display the top 5 rented movies along with the number of times they've been rented.
select film.title , count(rental_id) as total_rental from film
        INNER JOIN
    inventory ON film.film_id = inventory.film_id
        INNER JOIN
    rental ON rental.inventory_id = inventory.inventory_id 
    group by film.title order by total_rental desc limit 5;

-- Q.14 Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).

select * from customer;
select * from rental;
select * from inventory;

SELECT 
    customer.customer_id,
    CONCAT(customer.first_name,
            ' ',
            customer.last_name) AS name,
    store.store_id
FROM
    customer
        INNER JOIN
    rental ON rental.customer_id = customer.customer_id
        INNER JOIN
    inventory ON inventory.inventory_id = rental.customer_id
        INNER JOIN
    store ON store.store_id = inventory.store_id
WHERE
    store.store_id IN (1 , 2)
GROUP BY customer.customer_id , store.store_id , name
HAVING COUNT(DISTINCT store.store_id);
